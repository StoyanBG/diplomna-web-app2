// Predefined bus schedule in HH:MM format
const busSchedule = ['05:20', '05:35', '05:50', '06:05', '06:20', '06:35', '06:50', '07:05', '07:20', '07:35', '07:50', '08:05', '08:20',
    '08:35', '08:50', '09:05', '09:20', '09:35', '09:50', '10:05', '10:20', '10:35', '10:50', '11:05', '11:20', '11:35', '11:50',
    '12:05', '12:20', '12:35', '12:50', '13:05', '13:20', '13:35', '13:50', '14:05', '14:20', '14:35', '14:50', '15:05', '15:20',
    '15:35', '15:50', '16:05', '16:20', '16:35', '16:50', '17:05', '17:20', '17:35', '17:50', '18:05', '18:20', '18:35', '18:50',
    '19:00', '19:30', '19:40', '20:10', '20:35', '21:05'];

     // Function to find the next bus
     function findNextBus() {
         const userTimeInput = document.getElementById('userTime').value;

         if (!userTimeInput) {
             document.getElementById('result').textContent = 'Please enter a valid time.';
             return;
         }

         const nextBus = busSchedule.find(busTime => busTime >= userTimeInput);

         if (nextBus) {
             document.getElementById('result').textContent = `The next bus is at ${nextBus}.`;
         } else {
             document.getElementById('result').textContent = 'No more buses today.';
         }
     }
     var map = L.map('map').setView([42.1354, 24.7453], 13);

     // Add the OpenStreetMap tile layer
     L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
         attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
     }).addTo(map);

     // Define the bus route (example coordinates)
     var busRoute = [
   [42.16640201657257, 24.75101593211135, 0],
   [42.16598126564745, 24.75073852630776, 0],
   [42.16330772696295, 24.74829790318078, 0],
   [42.16311977377445, 24.74704035419122, 0],
   [42.15902392219218, 24.74864544447686, 0],
   [42.15350101666848, 24.74997826424629, 0],
   [42.15191252877077, 24.75030820922018, 0],
   [42.1503532908352, 24.75025053214726, 0],
   [42.14546517106, 24.75134437267666, 0],
   [42.14325619139846, 24.75152598045633, 0],
   [42.14339078855818, 24.75242572149163, 0],
   [42.14465137218573, 24.75453992685738, 0],
   [42.13956787315239, 24.75608867319426, 0],
   [42.14092381309239, 24.76329890251094, 0],
   [42.13648151926575, 24.7628384443034, 0],
   [42.1354424782697, 24.76364030627722, 0],
   [42.14319361386084, 24.78569556824165, 0],
   [42.1412932179578, 24.78815790103451, 0],
   [42.1431563730396, 24.79055468114203, 0],
   [42.14248195867865, 24.79342758394285, 0],
   [42.13830218969298, 24.79683636425549, 0],
   [42.13193938790776, 24.79458079868261, 0],
   [42.13115777557493, 24.79319061740148, 0],
   [42.13099547641288, 24.79032274377836, 0],
   [42.12944195510411, 24.78714428550424, 0],
   [42.12897535968761, 24.78208528950123, 0],
   [42.12810790496303, 24.77926304294177, 0],
   [42.12812954771808, 24.77782997694506, 0],
   [42.12845659074706, 24.77761627929345, 0],
   [42.13331331896048, 24.77450500834991, 0],
   [42.13369025705699, 24.77561549720404, 0],
   [42.13365726507111, 24.77609807270634, 0],
   [42.13295097010114, 24.77608515289894, 0],
   [42.13238167583982, 24.77618004733546, 0],
   [42.13235343329012, 24.77711907791094, 0],
   [42.13285717496895, 24.77816827960249, 0],
   [42.13331913187496, 24.77867710103811, 0],
   [42.13379913410181, 24.77861986689982, 0],
   [42.13367210482449, 24.77993960081394, 0],
   [42.13200642986065, 24.78004741165375, 0],
   [42.13139529131828, 24.78016705798589, 0],
   [42.1306433465183, 24.77606463869128, 0],
   [42.12927598094382, 24.77693003186113, 0],
   [42.12803756428451, 24.77767776021234, 0],
   [42.12795532507234, 24.77931497841169, 0],
   [42.12889011436474, 24.78216423341969, 0],
   [42.129297346115, 24.7873157444258, 0],
   [42.13089962114497, 24.79038705231098, 0],
   [42.13102570876691, 24.79324657365767, 0],
   [42.1318243426134, 24.79468212370274, 0],
   [42.13836723628273, 24.79707575409216, 0],
   [42.14262046173436, 24.79352329361755, 0],
   [42.14330384790834, 24.7904394114012, 0],
   [42.14147312935692, 24.78816901100198, 0],
   [42.14371056330785, 24.78578857207994, 0],
   [42.1356842302803, 24.76378052518614, 0],
   [42.13650589370235, 24.76307530071122, 0],
   [42.1409901640024, 24.76345593902967, 0],
   [42.13973803441488, 24.75623944101211, 0],
   [42.1421610450734, 24.75545872264721, 0],
   [42.14156734958079, 24.75175859218487, 0],
   [42.14550413733323, 24.75165444748462, 0],
   [42.15033007578621, 24.75048322598828, 0],
   [42.15191960784173, 24.75052866364354, 0],
   [42.15392153611005, 24.75019148262013, 0],
   [42.159071411587, 24.74909403787743, 0],
   [42.16293017670032, 24.74745947453865, 0],
   [42.16319890343193, 24.74837129405312, 0],
   [42.16595294066244, 24.75086552790228, 0],
   [42.16669243194485, 24.7514373876767, 0],
   [42.1670019453581, 24.7516225974954, 0],
   [42.16705162474862, 24.75138821068929, 0],
   [42.16640201657257, 24.75101593211135, 0]
];



     // Create a polyline for the bus route and add it to the map
     L.polyline(busRoute, {color: 'red'}).addTo(map);
     document.getElementById('main-page-button').addEventListener('click', function(event) {
           event.preventDefault(); // Prevent the default anchor click behavior

           // Check authentication status
           fetch('/check-auth')
               .then(response => response.json())
               .then(data => {
                   if (data.isAuthenticated) {
                       // Redirect to success.html if authenticated
                       window.location.href = '/cl.html';
                   } else {
                       // Redirect to login.html if not authenticated
                       window.location.href = '/login.html';
                   }
               })
               .catch(error => {
                   console.error('Error checking authentication:', error);
                   // Handle error, maybe redirect to login or show a message
                   window.location.href = '/login.html';
               });
       });